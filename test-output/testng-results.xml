<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="4" passed="1" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[TestA]]>
    </line>
  </reporter-output>
  <suite started-at="2022-07-25T02:44:32Z" name="Suite" finished-at="2022-07-25T02:44:48Z" duration-ms="16422">
    <groups>
    </groups>
    <test started-at="2022-07-25T02:44:32Z" name="QA" finished-at="2022-07-25T02:44:48Z" duration-ms="16422">
      <class name="script.TestClass2">
        <test-method is-config="true" signature="openApp(java.lang.reflect.Method, java.lang.String)[pri:0, instance:script.TestClass2@6f96c77]" started-at="2022-07-25T02:44:42Z" name="openApp" finished-at="2022-07-25T02:44:47Z" duration-ms="5064" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.TestClass2.testLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[config.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testLogin()[pri:0, instance:script.TestClass2@6f96c77]" started-at="2022-07-25T02:44:47Z" name="testLogin" finished-at="2022-07-25T02:44:47Z" duration-ms="8" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.fail(Assert.java:103)
at script.TestClass2.testLogin(TestClass2.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.TestClass2@6f96c77]" started-at="2022-07-25T02:44:47Z" name="closeApp" finished-at="2022-07-25T02:44:48Z" duration-ms="1390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=FAILURE method=TestClass2.testLogin()[pri:0, instance:script.TestClass2@6f96c77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.TestClass2 -->
      <class name="script.TestClass1">
        <test-method is-config="true" signature="createReport()[pri:0, instance:script.TestClass1@5ae50ce6]" started-at="2022-07-25T02:44:32Z" name="createReport" finished-at="2022-07-25T02:44:32Z" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createReport -->
        <test-method is-config="true" signature="openApp(java.lang.reflect.Method, java.lang.String)[pri:0, instance:script.TestClass1@5ae50ce6]" started-at="2022-07-25T02:44:32Z" name="openApp" finished-at="2022-07-25T02:44:40Z" duration-ms="8040" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.TestClass1.testA()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[config.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testA()[pri:0, instance:script.TestClass1@5ae50ce6]" started-at="2022-07-25T02:44:40Z" name="testA" finished-at="2022-07-25T02:44:40Z" duration-ms="4" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestA]]>
            </line>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.TestClass1@5ae50ce6]" started-at="2022-07-25T02:44:40Z" name="closeApp" finished-at="2022-07-25T02:44:42Z" duration-ms="1893" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA status=SUCCESS method=TestClass1.testA()[pri:0, instance:script.TestClass1@5ae50ce6] output=TestA]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="publishReport()[pri:0, instance:script.TestClass1@5ae50ce6]" started-at="2022-07-25T02:44:48Z" name="publishReport" finished-at="2022-07-25T02:44:49Z" duration-ms="518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publishReport -->
      </class> <!-- script.TestClass1 -->
    </test> <!-- QA -->
  </suite> <!-- Suite -->
</testng-results>
